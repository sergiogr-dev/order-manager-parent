services:
  postgres-inventory:
    image: postgres:17-alpine           # Imagen ligera de Postgres
    container_name: pg_inventory        # Nombre reconocible del contenedor
    env_file:                        # Variables en archivo .env (no versionar credenciales)
      - .env
    environment:
      POSTGRES_DB: ms_inventory         # Base de datos ms_inventory
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata-inventory:/var/lib/postgresql/data  # Volumen para persistencia
    ports:
      - "5431:5431"                     # Mapeo local del puerto (opcional si solo Docker interno)
    expose:
      - 5431                            # Expone internamente la base de datos para otros servicios en el compose
    command: -p 5431                    # Sobreescribe el puerto por defecto de postgres para usar este
    networks:
      - backend

  postgres-products:
    image: postgres:17-alpine
    container_name: pg_products
    env_file:
      - .env
    environment:
      POSTGRES_DB: ms_products
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata-products:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - 5432
    command: -p 5432
    networks:
      - backend

  postgres-orders:
    image: postgres:17-alpine
    container_name: pg_orders
    env_file:
      - .env
    environment:
      POSTGRES_DB: ms_orders
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata-orders:/var/lib/postgresql/data
    ports:
      - "5435:5435"
    expose:
      - 5435
    command: -p 5435
    networks:
      - backend

  ### Posgres database for Keycloak
  db-keycloak:
    container_name: db_keycloak
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: db_keycloak
      POSTGRES_USER: ${POSTGRES_KC_USER}
      POSTGRES_PASSWORD: ${POSTGRES_KC_PASSWORD}
    volumes:
      - pgdata-keycloak:/var/lib/postgresql/data  # Volumen para persistencia
    ports:
      - "5433:5433"
    expose:
      - 5433
    command: -p 5433

  ### Keycloak
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.3.2
    command: ["start-dev"]
    ports:
      - "8181:8181"
    expose:
      - 8181
    depends_on:
      - db-keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: db-keycloak
      DB_DATABASE: db_keycloak
      DB_PORT: 5433
      DB_USER: ${KC_USER}
      DB_PASSWORD: ${KC_PASSWORD}
      KEYCLOAK_ADMIN: ${KC_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD}
      KC_HTTP_PORT: 8181
    networks:
      - backend

volumes:
  pgdata-inventory:                     # Volumen dedicado para ms_inventory
  pgdata-products:                      # Volumen dedicado para ms_products
  pgdata-keycloak:                      # Volumen dedicado para ms_products
  pgdata-orders:                     # Volumen dedicado para ms_orders

networks:
  backend:                             # Red interna para que solo los servicios se comuniquen entre s√≠
